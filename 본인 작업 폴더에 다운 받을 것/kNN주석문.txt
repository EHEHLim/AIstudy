# 사이킷런으로부터 kNN 함수 추가

# 사이킷런으로부터 k-폴드 교차 검증 함수 추가


# 전체 데이터 수가 100개이므로 데이터의 수가 적어 "k-폴드 교차 검증"을 실행하기로 함.

# 최적의 k를 찾기 위해 교차 검증을 수행할 k의 범위를 3부터 학습데이터 절반까지 지정
                      # // -> 나누기 후 소수점 이하 버림.(주석문 아님에 주의!!)
             # 사용자 정의 리스트(즉, 배열) 생성
                          # for(i=3; i < max_k_range; i+=2)와 동일
           # k_list에 저장되는 값 : 3, 5, 7, 9, ..., 39 -> 총 19개

         # 사용자 정의 리스트 생성
         # 입력 데이터
         # 출력 데이터(정답), 즉 레이블(label)

# 교차 검증(10-fold)을 각 k를 대상으로 수행해 검증 결과를 저장
             # k_list에 저장된 값을 하나씩 뽑아 k에 저장한 후, for 문 반복 수행.
              # kNN 모델 정의
             # k(여기서는 10) 폴드 교차 검증 실행
          # 성능평가지표 -> 정확도   # .values : 데이터프레임에서 인덱스를 제외한 나머지 칼럼 값
                                                                              # .ravel() : y_train의 값을 1차원 배열로 만듦. 
                           # 즉, [[SG], [C], [SG], ...]]를 [SG, C, SG, ....]로 변경
                                               # scores에는 k번, 즉 10번 실행한 각 정확도 결과가 저장됨.
   # k-폴드 교차 검증의 최종 결과 19개 저장값 출력